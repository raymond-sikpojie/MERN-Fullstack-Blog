{"version":3,"sources":["components/Loader/Loader.js","components/PostItem/PostItem.js","context/Context.js","components/ShowAllPosts/ShowAllPosts.js","components/Posts/Posts.js","components/Home/Home.js","components/PostForm/PostForm.js","components/Login/Login.js","components/Register/Register.js","components/UserPosts/UserPosts.js","components/PrivateRoute.js","components/Navigation/Navbar.js","components/Footer/Footer.js","components/NotFound/NotFound.js","App.js","index.js"],"names":["Loader","className","class","PostItem","history","useHistory","postPhoto","localStorage","getItem","post","JSON","parse","useState","commentAdded","setCommentAdded","comment","setComment","userData","user","renderComment","comments","map","key","id","postedBy","firstName","lastName","Date","createdAt","toLocaleDateString","body","postComment","a","data","alert","fetch","_id","method","credentials","headers","stringify","response","console","log","status","json","msg","numberOfComments","length","useEffect","Aos","init","duration","easing","once","Fragment","data-aos","title","src","alt","width","height","tags","tag","Math","random","onSubmit","e","preventDefault","push","type","name","placeholder","value","onChange","target","createContext","PostList","setPostPhoto","useContext","PostContext","loading","setLoading","posts","setPosts","getPosts","getPhoto","postId","responseData","url","removeItem","setItem","getOnePost","substring","href","onClick","Posts","Home","to","PostForm","setTitle","setBody","setTags","selectedFile","setSelectedFile","sendPost","formData","FormData","append","encType","action","htmlFor","required","accept","files","Login","setLoggedIn","UserContext","email","setEmail","password","setPassword","setUserData","loginUser","token","align","Register","setFirstName","setLastName","registerUser","UserPosts","completeUserData","setCompleteUserData","postDeleted","setPostDeleted","getUserPost","deletePost","PrivateRoute","Component","component","rest","render","props","pathname","Navbar","loggedIn","clear","Footer","NotFound","App","postItem","setPostItem","Provider","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff85f5aa.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./loader.css\";\nexport default function Loader() {\n  return (\n    <div className=\"loader-main\">\n      <div class=\"donut multi\"></div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Loader from \"../Loader/Loader\";\nimport \"./postitem.css\";\nimport { useHistory } from \"react-router-dom\";\nimport Aos from \"aos\";\nimport \"aos/dist/aos.css\";\n\nexport default function PostItem() {\n  const history = useHistory();\n  // const [loading, setLoading] = useState(true);\n  // const { postPhoto } = useContext(PostContext);\n  const postPhoto = localStorage.getItem(\"postPhoto\");\n  const post = JSON.parse(localStorage.getItem(\"postItem\")); // saved to localStorage from ShowAllPosts component\n  const [commentAdded, setCommentAdded] = useState(false);\n  const [comment, setComment] = useState(\"\");\n\n  // const { userData } = useContext(PostContext);\n  // const user = userData.user;\n\n  // get user from local storage\n  const userData = JSON.parse(localStorage.getItem(\"auth-token\"));\n  // const { user } = userData;\n  const user = userData ? userData.user : \"\";\n\n  // Create a helper function which displays tags\n  const renderTags = (tags) => {\n    return tags.map((tag) => {\n      return <span key={Math.random() + 1}>{tag}</span>;\n    });\n  };\n\n  // Create a helper function which displays comments\n  const renderComment = (comments) => {\n    return comments.map((comment) => {\n      if (comment !== []) {\n        return (\n          <div key={comment.id}>\n            <p>\n              <b>\n                {comment.postedBy.firstName} {comment.postedBy.lastName}\n              </b>\n              <p>{new Date(comment.createdAt).toLocaleDateString()}</p>\n            </p>\n            <p className=\"comment__body\">{comment.body}</p>\n          </div>\n        );\n      }\n    });\n  };\n\n  // Post a comment\n  const postComment = async () => {\n    const data = { body: comment };\n    if (comment === \"\") {\n      return alert(\"Enter a comment\");\n    }\n    const response = await fetch(`/comment/${post._id}/${user.id}`, {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    console.log(response.status);\n    if (response.status === 200) {\n      const data = await response.json();\n      alert(data.msg);\n      setCommentAdded(!commentAdded);\n    }\n  };\n\n  // Get the number of comments\n  const numberOfComments = () => {\n    return <h3>Comments {post.comment.length}</h3>;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!user) {\n      history.push(\"/login\");\n    }\n    postComment();\n    setComment(\"\");\n  };\n\n  useEffect(() => {\n    renderComment(post.comment);\n    numberOfComments();\n  }, []);\n\n  useEffect(() => {\n    Aos.init({ duration: 1000, easing: \"ease-in-quad\", once: true });\n  }, []);\n\n  return (\n    <React.Fragment>\n      {!post ? (\n        <Loader />\n      ) : (\n        <div className=\"post__item\" data-aos=\"fade-up\">\n          <h2 className=\"title\">{post.title}</h2>\n          <p className=\"author\">{`By ${post.postedBy.firstName} ${post.postedBy.lastName}`}</p>\n          <p className=\"date\">{`Posted on ${new Date(\n            post.createdAt\n          ).toLocaleDateString()}`}</p>\n          {postPhoto !== null ? (\n            <img src={postPhoto} alt=\"post\" width=\"500\" height=\"500\" />\n          ) : (\n            // <img\n            //   src=\"https://res.cloudinary.com/ds57wvvno/image/upload/v1584789093/phonelady_lrttvw.jpg\"\n            //   alt=\"post photo\"\n            // />\n            <div></div>\n          )}\n          <p className=\"body\">{post.body}</p>\n\n          <em>\n            <div className=\"tags\">tags: {renderTags(post.tags)}</div>\n          </em>\n\n          <div className=\"comments\">\n            {post.comment.length > 0 ? (\n              <div>\n                {/* <h3>Comments {post.comment.length}</h3> */}\n                {numberOfComments()}\n                <div className=\"comment__content\">\n                  {renderComment(post.comment)}\n                </div>\n              </div>\n            ) : (\n              // <div>{renderComment(post.comment)}</div>\n              <h3>{post.comment.length} Comment</h3>\n            )}\n\n            {/* <AddComment /> */}\n\n            <div className=\"addComment-main\">\n              <form onSubmit={onSubmit}>\n                <input\n                  className=\"textarea\"\n                  type=\"textarea\"\n                  name=\"comment\"\n                  placeholder=\"Enter comment\"\n                  value={comment}\n                  onChange={(e) => setComment(e.target.value)}\n                />\n\n                <input\n                  className=\"post-comment\"\n                  type=\"submit\"\n                  value=\"Post Comment\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n      {/* <Footer /> */}\n    </React.Fragment>\n  );\n}\n","import { createContext } from \"react\";\n\nexport default createContext();\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport PostContext from \"../../context/Context\";\nimport Loader from \"../Loader/Loader\";\nimport \"./showallposts.css\";\nimport Aos from \"aos\";\nimport \"aos/dist/aos.css\";\n\nexport default function PostList() {\n  const { setPostPhoto } = useContext(PostContext);\n  const [loading, setLoading] = useState(true);\n  // all posts\n  const [posts, setPosts] = useState([]);\n\n  const history = useHistory();\n\n  // Get all posts\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"/posts\");\n      const data = await response.json();\n      if (response.status === 200) {\n        setPosts(data);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // FETCH POST PHOTO using post id\n  const getPhoto = async (postId) => {\n    const response = await fetch(`/posts/photo/${postId}`);\n    if (response.status === 200) {\n      const responseData = await response;\n      // Sets the postPhoto to the url of responseData\n      setPostPhoto(responseData.url);\n      localStorage.removeItem(\"postPhoto\");\n      localStorage.setItem(\"postPhoto\", responseData.url);\n    }\n  };\n\n  // Get one post\n  const getOnePost = async (postId) => {\n    setLoading(true);\n    const response = await fetch(`/posts/${postId}`);\n    const data = await response.json();\n\n    if (response.status === 200) {\n      // Save data to local storage to ensure data persistence\n      localStorage.removeItem(\"postItem\"); // removes previously stored items\n      localStorage.setItem(\"postItem\", JSON.stringify(data));\n      setLoading(false);\n      history.push(\"/posts/open\");\n      // call function to fetch photo\n      getPhoto(postId);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  useEffect(() => {\n    Aos.init({ duration: 1000, easing: \"ease-in-out\", once: true });\n  }, []);\n\n  const showPosts = () => {\n    return posts.map((post) => {\n      return (\n        <div className=\"show__allposts\" data-aos=\"fade-up\">\n          <div className=\"container\" key={post._id}>\n            {/* <img\n                src=\"https://res.cloudinary.com/ds57wvvno/image/upload/v1584789093/phonelady_lrttvw.jpg\"\n                alt=\"post photo\"\n              /> */}\n            <div className=\"content-container\">\n              <div className=\"content\">\n                <h3>{post.title}</h3>\n                <p>{`${post.body.substring(0, 150)}...`}</p>\n                <p>{`By ${post.postedBy.firstName} ${post.postedBy.lastName}`}</p>\n                {/* At the click of the button, fetch that particular post */}\n              </div>\n\n              <a href=\"#\" onClick={() => getOnePost(post._id)}>\n                Read more\n              </a>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  };\n  return (\n    <React.Fragment>\n      <div className=\"showallposts-main\">\n        <h2>Latest Posts</h2>\n        <div>{loading ? <Loader /> : <div>{showPosts()}</div>}</div>\n      </div>\n      {/* <Footer /> */}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport ShowAllPosts from \"../ShowAllPosts/ShowAllPosts\";\n// import \"../ShowAllPosts/showallposts.css\";\nimport \"./posts.css\";\n\nexport default function Posts() {\n  return (\n    <div className=\"posts-main\">\n      <div className=\"posts\">\n        <ShowAllPosts />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Posts from \"../Posts/Posts\";\nimport \"./home.css\";\nimport Aos from \"aos\";\nimport \"aos/dist/aos.css\";\n\nexport default function Home() {\n  useEffect(() => {\n    Aos.init({ duration: 1000, easing: \"ease-in-quad\", once: true });\n  }, []);\n  return (\n    <React.Fragment>\n      <div className=\"hero\">\n        <div className=\"hero-div\">\n          <div className=\"logo-div\">\n            {/* <div className=\"logo\">Logo Here</div> */}\n            <Link to=\"/login\">Sign In</Link>\n          </div>\n          <div className=\"hero-container\" data-aos=\"fade-up\">\n            <div className=\"description\">\n              <h1 className=\"hero-title\">Daily Journal</h1>\n              <p>\n                Document your wildest thoughts. Write about things you love.\n                Talk about those cool stuff that you are most passionate about.\n                Share your ideas with the world. Ramble on about your exciting,\n                new ideas.\n              </p>\n              <Link to=\"/login\">Get Started</Link>\n            </div>\n            <div className=\"image floating\" data-aos=\"fade-left\">\n              <img\n                src=\"https://res.cloudinary.com/ds57wvvno/image/upload/v1600891158/hero_ghs3pe.svg\"\n                alt=\"hero-img\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"posts\">\n        <div>\n          <Posts />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Loader from \"../Loader/Loader\";\nimport \"./postform.css\";\n\nexport default function PostForm() {\n  const [loading, setLoading] = useState(\"\");\n  // Get user\n  // const { userData } = useContext(UserContext);\n\n  // get user from local storage\n  const userData = JSON.parse(localStorage.getItem(\"auth-token\"));\n  // const { user } = userData;\n  const user = userData ? userData.user : \"\";\n  // const user = userData.user;\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [tags, setTags] = useState(\"\");\n\n  // for selected photo file\n  const [selectedFile, setSelectedFile] = useState();\n\n  const history = useHistory();\n\n  // Run this funtion to update selectedFile state when the user selects a photo\n  const selectPhoto = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  // send post\n  const sendPost = async () => {\n    setLoading(true);\n\n    const formData = new FormData(); // A boilerplate function\n    formData.append(\"title\", title);\n    formData.append(\"body\", body);\n    formData.append(\"tags\", tags);\n    formData.append(\"photo\", selectedFile, selectedFile.name);\n\n    const response = await fetch(`/posts/${user.id}`, {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      body: formData,\n    });\n\n    if (response.status === 200) {\n      const responseData = await response.json();\n      console.log(responseData.msg);\n      setLoading(false);\n      alert(responseData.msg);\n      history.push(\"/posts\");\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    sendPost();\n    // clear form fields\n    setTitle(\"\");\n    setBody(\"\");\n    setTags(\"\");\n  };\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"form-container\">\n          <h2 className=\"addPost__title\">Add New Post</h2>\n          <form\n            id=\"post\"\n            className=\"form\"\n            onSubmit={onSubmit}\n            encType=\"multipart/form-data\"\n            method=\"POST\"\n            action=\"/posts/:userId\"\n          >\n            <label htmlFor=\"title\">Title</label>\n            <input\n              id=\"post__title\"\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              required\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <label htmlFor=\"body\">Body</label>\n            <textarea\n              id=\"post__body\"\n              name=\"body\"\n              value={body}\n              required\n              onChange={(e) => setBody(e.target.value)}\n            ></textarea>\n\n            <label htmlFor=\"body\">Tags</label>\n            <input\n              id=\"post__tags\"\n              type=\"text\"\n              name=\"tags\"\n              placeholder=\"separate tags with a comma e.g love, light\"\n              value={tags}\n              required\n              onChange={(e) => setTags(e.target.value)}\n            />\n            <label htmlFor=\"body\">Add Photo</label>\n            <input\n              id=\"add__photo\"\n              type=\"file\"\n              name=\"photo\"\n              accept=\"image/*\"\n              onChange={selectPhoto}\n            />\n\n            <input className=\"send-post\" type=\"submit\" value=\"Send Post\" />\n          </form>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport UserContext from \"../../context/Context\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport \"./login.css\";\n\nexport default function Login() {\n  let { setLoggedIn } = useContext(UserContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  // Login user\n  const loginUser = async () => {\n    const user = { email, password };\n\n    if (!email || !password) {\n      return alert(\"All fields are required\");\n    }\n\n    // Login user\n    const response = await fetch(\"/user/login\", {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    });\n\n    const responseData = await response.json();\n\n    if (response.status === 200) {\n      // Update userData in the App component\n      setUserData({\n        token: responseData.token,\n        user: responseData.user,\n      });\n      // set loggedIn to true\n      setLoggedIn(true);\n\n      // save token in local storage. Use stringify to convert the object into a string\n      localStorage.setItem(\"auth-token\", JSON.stringify(responseData));\n\n      // setTimeout(() => {\n      history.push(\"/posts\");\n      // }, 2000);\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    loginUser();\n    // clear form fields\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"main\">\n        <p className=\"sign\" align=\"center\">\n          Sign in\n        </p>\n        <form className=\"form1\" onSubmit={onSubmit}>\n          <input\n            className=\"email\"\n            type=\"text\"\n            align=\"center\"\n            placeholder=\"Email\"\n            name=\"email\"\n            value={email}\n            required\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <input\n            className=\"pass\"\n            type=\"password\"\n            align=\"center\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            required\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <a href=\"#\" className=\"submit\" align=\"center\" onClick={onSubmit}>\n            Sign in\n          </a>\n          <p className=\"cta\" align=\"center\">\n            <Link to=\"/register\">Don't have an account? Sign Up</Link>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./register.css\";\n\nexport default function Register() {\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  const registerUser = async () => {\n    // Register new user\n    const user = { email, firstName, lastName, password };\n    if (!email || !firstName || !lastName || !password) {\n      return alert(\"All fields are required\");\n    }\n    const response = await fetch(\"/user/register\", {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    });\n\n    const responseData = await response.json();\n    if (response.status === 200) {\n      history.push(\"/login\");\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    registerUser();\n\n    // clear form fields\n    setEmail(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <div className=\"register\">\n      <div className=\"main\">\n        <p className=\"sign\" align=\"center\">\n          Sign up\n        </p>\n        <form className=\"form1\" onSubmit={onSubmit}>\n          <input\n            className=\"firstname\"\n            type=\"text\"\n            align=\"center\"\n            placeholder=\"First name\"\n            name=\"firstName\"\n            required\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n          />\n\n          <input\n            className=\"lastname\"\n            type=\"text\"\n            align=\"center\"\n            placeholder=\"Last name\"\n            name=\"firstName\"\n            required\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n          />\n\n          <input\n            className=\"email\"\n            type=\"text\"\n            align=\"center\"\n            placeholder=\"Email\"\n            name=\"email\"\n            value={email}\n            required\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <input\n            className=\"pass\"\n            type=\"password\"\n            align=\"center\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            required\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <a href=\"#\" className=\"submit\" align=\"center\" onClick={onSubmit}>\n            Register\n          </a>\n          <p className=\"cta\" align=\"center\">\n            <Link to=\"/login\">Already have an account? Sign In</Link>\n          </p>\n          <p className=\"msg\">(E-mail will not be verified)</p>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../../context/Context\";\nimport Loader from \"../Loader/Loader\";\n// import \"./userposts.css\";\nimport Aos from \"aos\";\nimport \"aos/dist/aos.css\";\n\nexport default function UserPosts() {\n  const [loading, setLoading] = useState(\"\");\n  const [completeUserData, setCompleteUserData] = useState(\"\");\n  const [postDeleted, setPostDeleted] = useState(false);\n  const { setPostPhoto } = useContext(UserContext);\n  // const { user, token } = userData;\n\n  // get user from local storage\n  const userData = JSON.parse(localStorage.getItem(\"auth-token\"));\n  const { user, token } = userData;\n\n  const history = useHistory();\n\n  // Get user's posts by finding the user and getting it's \"posts\" value.\n  // Add token to the authorization header.\n  const getUserPost = async () => {\n    setLoading(true);\n    const response = await fetch(`/user/${user.id}`, {\n      headers: {\n        \"x-auth-token\": token,\n      },\n    });\n    if (response.status === 200) {\n      const data = await response.json();\n      setCompleteUserData(data);\n      setLoading(false);\n    }\n  };\n\n  // FETCH POST PHOTO using post id\n  const getPhoto = async (postId) => {\n    const response = await fetch(`/posts/photo/${postId}`);\n    if (response.status === 200) {\n      const responseData = await response;\n\n      // Sets the postPhoto to the url of responseData\n      setPostPhoto(responseData.url);\n      // localStorage.setItem(\"postPhoto\", responseData.url);\n    }\n  };\n\n  // Get one post\n  const getOnePost = async (postId) => {\n    setLoading(true);\n    const response = await fetch(`/posts/${postId}`);\n    const data = await response.json();\n\n    if (response.status === 200) {\n      setLoading(false);\n      // Save data to local storage to ensure data persistence\n      localStorage.removeItem(\"postItem\"); // removes previously stored items\n      localStorage.setItem(\"postItem\", JSON.stringify(data));\n      history.push(\"/posts/open\");\n\n      // call function to fetch photo\n      getPhoto(postId);\n    }\n  };\n\n  // Delete post by getting the user id and the post id\n  const deletePost = async (postId) => {\n    setLoading(true);\n    const response = await fetch(`/posts/${postId}/${user.id}`, {\n      method: \"DELETE\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": token,\n      },\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      setPostDeleted(!postDeleted);\n      setLoading(false);\n      alert(data.msg);\n    }\n  };\n\n  // When the user's data changes, re-run function\n  useEffect(() => {\n    getUserPost();\n  }, [postDeleted]);\n\n  useEffect(() => {\n    Aos.init({ duration: 1000, easing: \"ease-in-quad\", once: true });\n  }, []);\n\n  function showUserPost() {\n    return (\n      <div>\n        {completeUserData !== \"\" && completeUserData.posts.length > 0 ? (\n          completeUserData.posts.map((post) => {\n            return (\n              <div className=\"show__allposts\" key={post._id} data-aos=\"fade-up\">\n                <div className=\"container\">\n                  <div className=\"content-container\">\n                    <div className=\"content\">\n                      <div>\n                        <h3>{post.title}</h3>\n                        <p>{`${post.body.substring(0, 108)}...`}</p>\n                        <p>{`Posted by ${post.postedBy.firstName} ${post.postedBy.lastName}`}</p>\n                      </div>\n\n                      {/* At the click of the button, fetch or delete that particular post */}\n                      <div className=\"links\">\n                        <a\n                          href=\"#\"\n                          className=\"read\"\n                          onClick={() => getOnePost(post._id)}\n                        >\n                          Open\n                        </a>\n                        <a\n                          href=\"#\"\n                          className=\"delete\"\n                          onClick={() => deletePost(post._id)}\n                        >\n                          Delete\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <p>No Posts</p>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"userposts__main\">\n        {loading ? (\n          <Loader />\n        ) : (\n          <div>\n            <h2 className=\"title\">Your Posts</h2>\n            <div>{showUserPost()}</div>\n          </div>\n        )}\n      </div>\n      {/* <Footer /> */}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  // get token from local storage\n  const user = JSON.parse(localStorage.getItem(\"auth-token\"));\n\n  // if user is null let token be an empty string, otherwise set the token.\n  const token = user ? user.token : \"\";\n  //   const token = userData.token;\n  return (\n    // If token is unavailable, make this route unaccessible\n    <Route\n      {...rest}\n      render={(props) =>\n        token !== \"\" ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: \"/login\" }} />\n        )\n      }\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport UserContext from \"../../context/Context\";\nimport \"./navbar.css\";\n\nexport default function Navbar() {\n  let { loggedIn, setLoggedIn } = useContext(UserContext);\n\n  // get token from local storage\n  let userData =\n    localStorage !== null\n      ? JSON.parse(localStorage.getItem(\"auth-token\"))\n      : null;\n\n  // if userData is null let token be an empty string, otherwise set the token.\n  let token = userData ? userData.token : \"\";\n\n  //   const token = userData.token;\n\n  // Logout function\n  const handleLogout = () => {\n    localStorage.clear();\n    setLoggedIn(false);\n    // userData = {};\n    // history.push(\"/\");\n  };\n\n  return (\n    <div className=\"nav-main\">\n      <div className=\"menu-wrap\">\n        <input type=\"checkbox\" class=\"toggler\" />\n        <div className=\"hamburger\">\n          <div></div>\n        </div>\n        <div className=\"menu\">\n          <div>\n            {loggedIn === true || token ? (\n              <div>\n                <ul>\n                  <li>\n                    <a href=\"/\">Home</a>\n                  </li>\n                  <li>\n                    <a href=\"/posts/new\">New Post</a>\n                  </li>\n                  <li>\n                    <a href=\"/user/post\">Manage My Posts</a>\n                  </li>\n                  <li>\n                    <a href=\"/\" onClick={handleLogout}>\n                      Sign Out\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            ) : (\n              <div className=\"menu-noToken\">\n                <li>\n                  <a href=\"/\">Home</a>\n                </li>\n                <li>\n                  <a href=\"/login\">Login</a>\n                </li>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./footer.css\";\n\nexport default function Footer() {\n  return (\n    <div className=\"footer-main\">\n      Omogbare Sikpojie <span> &#169;</span>2020\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./notfound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"not__found\">\n      <h1 className=\"title\">Error 404 Page Not Found</h1>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PostItem from \"./components/PostItem/PostItem\";\nimport Home from \"./components/Home/Home\";\nimport Posts from \"./components/Posts/Posts\";\nimport PostForm from \"./components/PostForm/PostForm\";\nimport PostContext from \"./context/Context\";\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\nimport UserPosts from \"./components/UserPosts/UserPosts\";\nimport Loader from \"./components/Loader/Loader\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Navbar from \"./components/Navigation/Navbar\";\nimport Footer from \"./components/Footer/Footer\";\nimport NotFound from \"./components/NotFound/NotFound\";\nimport \"./App.css\";\n\nexport default function App() {\n  // user\n  const [userData, setUserData] = useState({\n    token: \"\",\n    user: \"\",\n  });\n\n  // one post\n  const [postItem, setPostItem] = useState({});\n\n  // one photo\n  const [postPhoto, setPostPhoto] = useState(null);\n\n  // Trigger change in when user logs in\n  const [loggedIn, setLoggedIn] = useState(false); // Used in the navbar component\n\n  return (\n    <div className=\"app-main\">\n      <Router>\n        <PostContext.Provider\n          value={{\n            userData,\n            setUserData,\n            // posts,\n            postItem,\n            setPostItem,\n            postPhoto,\n            setPostPhoto,\n            loggedIn,\n            setLoggedIn,\n          }}\n        >\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/loader\" component={Loader} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/posts/open\" component={PostItem} />\n            <PrivateRoute exact path=\"/posts\" component={Posts} />\n            <PrivateRoute path=\"/posts/new\" component={PostForm} />\n            <PrivateRoute path=\"/user/post\" component={UserPosts} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </PostContext.Provider>\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}